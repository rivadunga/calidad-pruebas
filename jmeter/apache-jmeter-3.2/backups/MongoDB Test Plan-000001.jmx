<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MongoDB Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">Shows how to setup a MongoDB Test</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <MongoSourceElement guiclass="TestBeanGUI" testclass="MongoSourceElement" testname="MongoDB Source Config" enabled="true">
        <stringProp name="connection">127.0.0.1</stringProp>
        <stringProp name="source">db</stringProp>
        <boolProp name="autoConnectRetry">false</boolProp>
        <intProp name="connectionsPerHost">50</intProp>
        <intProp name="connectTimeout">0</intProp>
        <longProp name="maxAutoConnectRetryTime">0</longProp>
        <intProp name="maxWaitTime">120000</intProp>
        <intProp name="socketTimeout">0</intProp>
        <boolProp name="socketKeepAlive">false</boolProp>
        <intProp name="threadsAllowedToBlockForConnectionMultiplier">5</intProp>
        <boolProp name="safe">false</boolProp>
        <boolProp name="fsync">false</boolProp>
        <boolProp name="waitForJournaling">false</boolProp>
        <intProp name="writeOperationNumberOfServers">0</intProp>
        <intProp name="writeOperationTimeout">0</intProp>
        <boolProp name="continueOnInsertError">false</boolProp>
        <stringProp name="TestPlan.comments">Configures connection to MongoDB</stringProp>
      </MongoSourceElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <longProp name="ThreadGroup.start_time">1367357168000</longProp>
        <longProp name="ThreadGroup.end_time">1367357168000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="script">import com.mongodb.* 
import org.apache.jmeter.protocol.mongodb.config.MongoDBHolder;


DB db = MongoDBHolder.getDBFromSource(&quot;db&quot;, &quot;test&quot;);
DBCollection collection = db.getCollection(&quot;zips&quot;);

BasicDBObject query = new BasicDBObject(&quot;city&quot;, &quot;NEW YORK&quot;);
DBCursor cursor = collection.find(query); 
StringBuilder resultBuilder = new StringBuilder(); 

while (cursor.hasNext()) { 
DBObject result = cursor.next();
resultBuilder.append(result.toString()); 

}

SampleResult.setResponseData(resultBuilder.toString());
</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
